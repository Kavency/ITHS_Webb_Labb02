@page "/category/create"
@page "/category/update/{id:int}"

@rendermode InteractiveServer
@using KayakCove.Application.Services
@using KayakCove.Domain.Entities
@inject CategoryService _categoryService
@inject NavigationManager _navigationManager
@inject IJSRuntime _js

@if (IsLoading)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="images/loading.gif" alt="Loading data" />
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">@(Id > 0 ? "Update" : "Create") Category</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <EditForm Model="Category" FormName="UpsertCategoryForm" OnValidSubmit="OnUpsertCategorySubmit">
                <DataAnnotationsValidator />
                <div class="border p-3 mt-4">
                    <div class="form-floating py-3 col-12">
                        <InputText @bind-Value="Category.Name" class="form-control" id="Name" placeholder="Name" />
                        <label for="Name">Name</label>
                        <ValidationMessage For="@(() => Category.Name)" />
                    </div>
                    <div class="row mt-3">
                        <div class="col-6 col-md-3">
                            <button type="submit" class="btn btn-success form-control" disabled="@IsLoading">
                                <i class="bi bi-floppy"></i> Save
                            </button>
                        </div>
                        <div class="col-6 col-md-3">
                            <button @onclick="OnUpsertCategoryCancel" class="btn btn-danger form-control" disabled="@IsLoading">
                                <i class="bi bi-arrow-left-square"></i> Back to list
                            </button>
                        </div>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
}


@code {
    private bool IsLoading { get; set; } = true;

    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    public Category Category { get; set; } = new();

    private string CategoryNameFallback { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            Category = await _categoryService.GetCategoryByIdAsync(Id);
            CategoryNameFallback = Category.Name;
        }
        IsLoading = false;
    }

    private async Task OnUpsertCategorySubmit()
    {
        IsLoading = true;

        if (Id == 0)
        {
            await _categoryService.CreateCategoryAsync(Category);
            await _js.ToastrSuccess("Category created!");
        }
        else
        {
            await _categoryService.UpdateCategoryAsync(Category);
            await _js.ToastrSuccess("Category updated!");
        }

        IsLoading = false;

        _navigationManager.NavigateTo("category");
    }

    private void OnUpsertCategoryCancel()
    {
        Category.Name = CategoryNameFallback;
        _navigationManager.NavigateTo("category");
    }

}
